{
  "contractName": "Dapp",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "dappStateContract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "getStateContractOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "increment",
          "type": "uint256"
        }
      ],
      "name": "incrementStateCounter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getStateCounter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"dappStateContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"getStateContractOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getStateCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"increment\",\"type\":\"uint256\"}],\"name\":\"incrementStateCounter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getStateContractOwner()\":{\"details\":\"Example function to demonstrate cross-contract READ call\"},\"getStateCounter()\":{\"details\":\"Another example function to demonstrate cross-contract WRITE call\"},\"incrementStateCounter(uint256)\":{\"details\":\"Example function to demonstrate cross-contract WRITE call\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Dapp.sol\":\"Dapp\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Dapp.sol\":{\"keccak256\":\"0x4f668f7635b8b7d88dbf84e4033b428b2ef336daabdc2e0541a0cfb63ee835e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e20e5d17d85177713f129ddd53b1c212c61b2c2f4053792ae883a924fd9f9d7\",\"dweb:/ipfs/QmNWHpeSLLcAAwh2Uy2N35oNWXQjzcd9jiKTAPHaDsK1YX\"]},\"project:/contracts/DappLib.sol\":{\"keccak256\":\"0xb7a70fc2e7dc27dc5eeb0788aef683089e955ac596eec097c6733e1dacc7306e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea7110178f2e7f1cdd534aa2d0df1928e8d50c3b45430eb30fce40b1d375236a\",\"dweb:/ipfs/QmTANSY9UYspSdedddeHKVdy5tG3BiuvWUDKZKHunWyjKu\"]},\"project:/contracts/interfaces/IDappState.sol\":{\"keccak256\":\"0x622b0c75e575f2a7874b46e0351693126504d95bb291abc5068ffc0890f9108c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b1226a3dd83a668c2e1a09f87be7140430a88a3ef74996f9c82c7a791a6a62c\",\"dweb:/ipfs/QmWme6Au1G9Tj6gZTEN2oWUCwhEKeKfKeN1h7AosWqwGeU\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610530380380610530833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610419806101176000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063111d4a0714610046578063a9bd9fc514610062578063cde03c7814610080575b600080fd5b610060600480360381019061005b9190610295565b61009e565b005b61006a61012c565b60405161007791906102d1565b60405180910390f35b6100886101c3565b604051610095919061032d565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636abbb3b4826040518263ffffffff1660e01b81526004016100f791906102d1565b600060405180830381600087803b15801561011157600080fd5b505af1158015610125573d6000803e3d6000fd5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ada066e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561019a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101be919061035d565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663442890d56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610231573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025591906103b6565b905090565b600080fd5b6000819050919050565b6102728161025f565b811461027d57600080fd5b50565b60008135905061028f81610269565b92915050565b6000602082840312156102ab576102aa61025a565b5b60006102b984828501610280565b91505092915050565b6102cb8161025f565b82525050565b60006020820190506102e660008301846102c2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610317826102ec565b9050919050565b6103278161030c565b82525050565b6000602082019050610342600083018461031e565b92915050565b60008151905061035781610269565b92915050565b6000602082840312156103735761037261025a565b5b600061038184828501610348565b91505092915050565b6103938161030c565b811461039e57600080fd5b50565b6000815190506103b08161038a565b92915050565b6000602082840312156103cc576103cb61025a565b5b60006103da848285016103a1565b9150509291505056fea26469706673582212203b461bb0d9dcdd42127042c996b9f138799b603d37eefcc6bdfe7b1b3a5c752364736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c8063111d4a0714610046578063a9bd9fc514610062578063cde03c7814610080575b600080fd5b610060600480360381019061005b9190610295565b61009e565b005b61006a61012c565b60405161007791906102d1565b60405180910390f35b6100886101c3565b604051610095919061032d565b60405180910390f35b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636abbb3b4826040518263ffffffff1660e01b81526004016100f791906102d1565b600060405180830381600087803b15801561011157600080fd5b505af1158015610125573d6000803e3d6000fd5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638ada066e6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561019a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101be919061035d565b905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663442890d56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610231573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025591906103b6565b905090565b600080fd5b6000819050919050565b6102728161025f565b811461027d57600080fd5b50565b60008135905061028f81610269565b92915050565b6000602082840312156102ab576102aa61025a565b5b60006102b984828501610280565b91505092915050565b6102cb8161025f565b82525050565b60006020820190506102e660008301846102c2565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610317826102ec565b9050919050565b6103278161030c565b82525050565b6000602082019050610342600083018461031e565b92915050565b60008151905061035781610269565b92915050565b6000602082840312156103735761037261025a565b5b600061038184828501610348565b91505092915050565b6103938161030c565b811461039e57600080fd5b50565b6000815190506103b08161038a565b92915050565b6000602082840312156103cc576103cb61025a565b5b60006103da848285016103a1565b9150509291505056fea26469706673582212203b461bb0d9dcdd42127042c996b9f138799b603d37eefcc6bdfe7b1b3a5c752364736f6c63430008130033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1199:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:6",
                "type": ""
              }
            ],
            "src": "7:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:6",
                "type": ""
              }
            ],
            "src": "334:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:6",
                "type": ""
              }
            ],
            "src": "466:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:6",
                "type": ""
              }
            ],
            "src": "568:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "759:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "769:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "784:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "778:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "778:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "769:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "827:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "800:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "800:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "737:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "745:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "753:5:6",
                "type": ""
              }
            ],
            "src": "696:143:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "922:274:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "968:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "970:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "970:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "970:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "952:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "964:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "935:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "932:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1061:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1076:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1080:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1105:74:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1151:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1162:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1147:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1147:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1171:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1115:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1115:64:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1105:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "892:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "903:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "915:6:6",
                "type": ""
              }
            ],
            "src": "845:351:6"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3100:6",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:6",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:6",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:6"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:6"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:6",
                "type": ""
              }
            ],
            "src": "7:75:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:6"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:6",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:6",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:6"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:6",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:6",
                "type": ""
              }
            ],
            "src": "334:77:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:6"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:6",
                "type": ""
              }
            ],
            "src": "417:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:6",
                "type": ""
              }
            ],
            "src": "545:139:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:6",
                "type": ""
              }
            ],
            "src": "690:329:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1090:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1107:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1130:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1112:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1112:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1100:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1100:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1100:37:6"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1078:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1085:3:6",
                "type": ""
              }
            ],
            "src": "1025:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1257:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1269:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1280:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1265:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1265:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1257:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1337:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1350:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1361:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1346:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1293:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1293:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1293:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1219:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1231:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1242:4:6",
                "type": ""
              }
            ],
            "src": "1149:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1422:81:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1432:65:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1447:5:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1454:42:6",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1443:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1443:54:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1432:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1404:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1414:7:6",
                "type": ""
              }
            ],
            "src": "1377:126:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1554:51:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1564:35:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1593:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1575:17:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1575:24:6"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1564:7:6"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1536:5:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1546:7:6",
                "type": ""
              }
            ],
            "src": "1509:96:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1676:53:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1693:3:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1716:5:6"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1698:17:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1698:24:6"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1686:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1686:37:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1686:37:6"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1664:5:6",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1671:3:6",
                "type": ""
              }
            ],
            "src": "1611:118:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1833:124:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1843:26:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1855:9:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1866:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1851:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1851:18:6"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1843:4:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1923:6:6"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1936:9:6"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1947:1:6",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1932:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1932:17:6"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "1879:43:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1879:71:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1879:71:6"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1805:9:6",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1817:6:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1828:4:6",
                "type": ""
              }
            ],
            "src": "1735:222:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2026:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2036:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2051:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2045:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2045:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2036:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2094:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2067:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2067:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2067:33:6"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2004:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2012:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2020:5:6",
                "type": ""
              }
            ],
            "src": "1963:143:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2189:274:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2235:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2237:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2237:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2237:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2210:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2219:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2206:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2206:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2231:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2202:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2202:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2199:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2328:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2343:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2357:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2347:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2372:74:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2418:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2429:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2414:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2414:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2438:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "2382:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2382:64:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2372:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2159:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2170:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2182:6:6",
                "type": ""
              }
            ],
            "src": "2112:351:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2512:79:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2569:16:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2578:1:6",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2581:1:6",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2571:6:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2571:12:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2571:12:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2535:5:6"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2560:5:6"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "2542:17:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2542:24:6"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2532:2:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2532:35:6"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2525:6:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2525:43:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2522:63:6"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2505:5:6",
                "type": ""
              }
            ],
            "src": "2469:122:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2660:80:6",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2670:22:6",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2685:6:6"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2679:5:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2679:13:6"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2670:5:6"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2728:5:6"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "2701:26:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2701:33:6"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2701:33:6"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2638:6:6",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2646:3:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2654:5:6",
                "type": ""
              }
            ],
            "src": "2597:143:6"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2823:274:6",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2869:83:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2871:77:6"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2871:79:6"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2871:79:6"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2844:7:6"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2853:9:6"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2840:3:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2840:23:6"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2865:2:6",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2836:3:6"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2836:32:6"
                  },
                  "nodeType": "YulIf",
                  "src": "2833:119:6"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2962:128:6",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2977:15:6",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2991:1:6",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2981:6:6",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3006:74:6",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3052:9:6"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3063:6:6"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3048:3:6"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3048:22:6"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3072:7:6"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3016:31:6"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3016:64:6"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3006:6:6"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2793:9:6",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2804:7:6",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2816:6:6",
                "type": ""
              }
            ],
            "src": "2746:351:6"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 6,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1209:1530:0:-:0;;;1659:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1788:17;1769:5;;:37;;;;;;;;;;;;;;;;;;1659:154;1209:1530;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;1209:1530:0:-;;;;;;;",
  "deployedSourceMap": "1209:1530:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:239;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2548:188;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1908:200;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2204:239;2403:5;;;;;;;;;;:22;;;2426:9;2403:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2204:239;:::o;2548:188::-;2681:7;2711:5;;;;;;;;;;;:16;;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2704:25;;2548:188;:::o;1908:200::-;2047:7;2077:5;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2070:31;;1908:200;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:118::-;1112:24;1130:5;1112:24;:::i;:::-;1107:3;1100:37;1025:118;;:::o;1149:222::-;1242:4;1280:2;1269:9;1265:18;1257:26;;1293:71;1361:1;1350:9;1346:17;1337:6;1293:71;:::i;:::-;1149:222;;;;:::o;1377:126::-;1414:7;1454:42;1447:5;1443:54;1432:65;;1377:126;;;:::o;1509:96::-;1546:7;1575:24;1593:5;1575:24;:::i;:::-;1564:35;;1509:96;;;:::o;1611:118::-;1698:24;1716:5;1698:24;:::i;:::-;1693:3;1686:37;1611:118;;:::o;1735:222::-;1828:4;1866:2;1855:9;1851:18;1843:26;;1879:71;1947:1;1936:9;1932:17;1923:6;1879:71;:::i;:::-;1735:222;;;;:::o;1963:143::-;2020:5;2051:6;2045:13;2036:22;;2067:33;2094:5;2067:33;:::i;:::-;1963:143;;;;:::o;2112:351::-;2182:6;2231:2;2219:9;2210:7;2206:23;2202:32;2199:119;;;2237:79;;:::i;:::-;2199:119;2357:1;2382:64;2438:7;2429:6;2418:9;2414:22;2382:64;:::i;:::-;2372:74;;2328:128;2112:351;;;;:::o;2469:122::-;2542:24;2560:5;2542:24;:::i;:::-;2535:5;2532:35;2522:63;;2581:1;2578;2571:12;2522:63;2469:122;:::o;2597:143::-;2654:5;2685:6;2679:13;2670:22;;2701:33;2728:5;2701:33;:::i;:::-;2597:143;;;;:::o;2746:351::-;2816:6;2865:2;2853:9;2844:7;2840:23;2836:32;2833:119;;;2871:79;;:::i;:::-;2833:119;2991:1;3016:64;3072:7;3063:6;3052:9;3048:22;3016:64;:::i;:::-;3006:74;;2962:128;2746:351;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\npragma experimental ABIEncoderV2;\n\nimport \"./interfaces/IDappState.sol\";\nimport \"./DappLib.sol\";\n\n    /*\n\n    VERY IMPORTANT SECURITY NOTE:\n\n    You will want to restrict some of your state contract functions so only authorized\n    contracts can call them. This can be achieved in four steps:\n\n    1) Include the \"Access Control: Contract Access\" feature block when creating your project.\n       This adds all the functionality to manage white-listing of external contracts in your\n       state contract.\n\n    2) Add the \"requireContractAuthorized\" function modifiers to those state contract functions\n       that should be restricted.\n\n    3) Deploy the contract that will be calling into the state contract (like this one, for example).\n    \n    4) Call the \"authorizeContract()\" function in the state contract with the deployed address of the\n       calling contract. This adds the calling contract to a white-list. Thereafter, any calls to any\n       function in the state contract that use the \"requireContractAuthorized\" function modifier will\n       succeed only if the calling contract (or any caller for that matter) is white-listed.\n\n    */\n\n\ncontract Dapp {\n    // Allow DappLib(SafeMath) functions to be called for all uint256 types\n    // (similar to \"prototype\" in Javascript)\n    using DappLib for uint256;\n\n    IDappState state;\n\n    // During deployment, the address of the contract that contains data (or \"state\")\n    // is provided as a constructor argument. The \"state\" variable can then call any\n    // function in the state contract that it is aware of (by way of IDappState).\n    constructor \n                (\n                    address dappStateContract \n                )\n    {\n        state = IDappState(dappStateContract);\n    }\n\n    /**\n    * @dev Example function to demonstrate cross-contract READ call\n    *\n    */\n    function getStateContractOwner()\n                            external\n                            view\n                            returns(address)\n    {\n        return state.getContractOwner();\n    }\n\n    /**\n    * @dev Example function to demonstrate cross-contract WRITE call\n    *\n    */\n    function incrementStateCounter\n                            (\n                                uint256 increment\n                            )\n                            external\n    {\n        return state.incrementCounter(increment);\n    }\n\n\n    /**\n    * @dev Another example function to demonstrate cross-contract WRITE call\n    *\n    */\n    function getStateCounter()\n                            external\n                            view\n                            returns(uint256)\n    {\n        return state.getCounter();\n    }\n\n} \n",
  "sourcePath": "/Users/nik/Developer/Decentology/DappStarter/vulcan-preview/packages/dapplib/contracts/Dapp.sol",
  "ast": {
    "absolutePath": "project:/contracts/Dapp.sol",
    "exportedSymbols": {
      "Dapp": [
        57
      ],
      "DappLib": [
        262
      ],
      "IDappState": [
        1158
      ]
    },
    "id": 58,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:33:0"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IDappState.sol",
        "file": "./interfaces/IDappState.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 1159,
        "src": "91:37:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/DappLib.sol",
        "file": "./DappLib.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 263,
        "src": "129:23:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Dapp",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57
        ],
        "name": "Dapp",
        "nameLocation": "1218:4:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 7,
            "libraryName": {
              "id": 5,
              "name": "DappLib",
              "nameLocations": [
                "1357:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 262,
              "src": "1357:7:0"
            },
            "nodeType": "UsingForDirective",
            "src": "1351:26:0",
            "typeName": {
              "id": 6,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1369:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "id": 10,
            "mutability": "mutable",
            "name": "state",
            "nameLocation": "1394:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 57,
            "src": "1383:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IDappState_$1158",
              "typeString": "contract IDappState"
            },
            "typeName": {
              "id": 9,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 8,
                "name": "IDappState",
                "nameLocations": [
                  "1383:10:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1158,
                "src": "1383:10:0"
              },
              "referencedDeclaration": 1158,
              "src": "1383:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IDappState_$1158",
                "typeString": "contract IDappState"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "1759:54:0",
              "statements": [
                {
                  "expression": {
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 15,
                      "name": "state",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1769:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDappState_$1158",
                        "typeString": "contract IDappState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 17,
                          "name": "dappStateContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1788:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 16,
                        "name": "IDappState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1158,
                        "src": "1777:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IDappState_$1158_$",
                          "typeString": "type(contract IDappState)"
                        }
                      },
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1777:29:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDappState_$1158",
                        "typeString": "contract IDappState"
                      }
                    },
                    "src": "1769:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDappState_$1158",
                      "typeString": "contract IDappState"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:37:0"
                }
              ]
            },
            "id": 22,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12,
                  "mutability": "mutable",
                  "name": "dappStateContract",
                  "nameLocation": "1718:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 22,
                  "src": "1710:25:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1710:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1688:66:0"
            },
            "returnParameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1759:0:0"
            },
            "scope": 57,
            "src": "1659:154:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 32,
              "nodeType": "Block",
              "src": "2060:48:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 28,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2077:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDappState_$1158",
                          "typeString": "contract IDappState"
                        }
                      },
                      "id": 29,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2083:16:0",
                      "memberName": "getContractOwner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1147,
                      "src": "2077:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 30,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2077:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 27,
                  "id": 31,
                  "nodeType": "Return",
                  "src": "2070:31:0"
                }
              ]
            },
            "documentation": {
              "id": 23,
              "nodeType": "StructuredDocumentation",
              "src": "1819:84:0",
              "text": " @dev Example function to demonstrate cross-contract READ call"
            },
            "functionSelector": "cde03c78",
            "id": 33,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStateContractOwner",
            "nameLocation": "1917:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1938:2:0"
            },
            "returnParameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33,
                  "src": "2047:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2047:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2046:9:0"
            },
            "scope": 57,
            "src": "1908:200:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "2386:57:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41,
                        "name": "increment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2426:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 39,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2403:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDappState_$1158",
                          "typeString": "contract IDappState"
                        }
                      },
                      "id": 40,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2409:16:0",
                      "memberName": "incrementCounter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1152,
                      "src": "2403:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2403:33:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "functionReturnParameters": 38,
                  "id": 43,
                  "nodeType": "Return",
                  "src": "2396:40:0"
                }
              ]
            },
            "documentation": {
              "id": 34,
              "nodeType": "StructuredDocumentation",
              "src": "2114:85:0",
              "text": " @dev Example function to demonstrate cross-contract WRITE call"
            },
            "functionSelector": "111d4a07",
            "id": 45,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "incrementStateCounter",
            "nameLocation": "2213:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36,
                  "mutability": "mutable",
                  "name": "increment",
                  "nameLocation": "2305:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 45,
                  "src": "2297:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 35,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2297:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2263:81:0"
            },
            "returnParameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2386:0:0"
            },
            "scope": 57,
            "src": "2204:239:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "2694:42:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 51,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2711:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDappState_$1158",
                          "typeString": "contract IDappState"
                        }
                      },
                      "id": 52,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2717:10:0",
                      "memberName": "getCounter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1157,
                      "src": "2711:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2711:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 50,
                  "id": 54,
                  "nodeType": "Return",
                  "src": "2704:25:0"
                }
              ]
            },
            "documentation": {
              "id": 46,
              "nodeType": "StructuredDocumentation",
              "src": "2450:93:0",
              "text": " @dev Another example function to demonstrate cross-contract WRITE call"
            },
            "functionSelector": "a9bd9fc5",
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStateCounter",
            "nameLocation": "2557:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2572:2:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 56,
                  "src": "2681:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2681:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2680:9:0"
            },
            "scope": 57,
            "src": "2548:188:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 58,
        "src": "1209:1530:0",
        "usedErrors": []
      }
    ],
    "src": "32:2709:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.19+commit.7dd6d404.Emscripten.clang"
  },
  "networks": {
    "1682972119189": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682979227536": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682979282432": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682979681350": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682979864160": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682979968409": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682980157063": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682980218973": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682980887323": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682981112893": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682981343381": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682981509492": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682982419437": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682982563878": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682983149079": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682983195078": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682983496294": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682983913538": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682984200636": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1682985251801": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1683054482442": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1683143921067": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1683144499251": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1683146377884": {
      "events": {},
      "links": {},
      "address": "0x4546aFFF1251c4E5E2fECf379B4736565aefCc93",
      "transactionHash": "0x3ca93639466cc5993581dae443fa6c0fa388a91f561f8f08822ac0a9ef9f9839"
    },
    "1683148599490": {
      "events": {},
      "links": {},
      "address": "0xa6A8331bc294150d7Ab90b093105F7452d753C2c",
      "transactionHash": "0x0040f736f03763ec7f65cfaff025893220ef3ccfe4b1b293b95c5f83f2e83fd0"
    },
    "1683157325784": {
      "events": {},
      "links": {},
      "address": "0x4554C574388EED6a949C60a16BB02078DA4A3311",
      "transactionHash": "0xef079ab771735bbf1eaaccf2e0f1a72821dcce245b47ce9a863925e06f30ecbf"
    },
    "1683159169939": {
      "events": {},
      "links": {},
      "address": "0x4554C574388EED6a949C60a16BB02078DA4A3311",
      "transactionHash": "0xef079ab771735bbf1eaaccf2e0f1a72821dcce245b47ce9a863925e06f30ecbf"
    }
  },
  "schemaVersion": "3.4.13",
  "updatedAt": "2023-05-04T00:13:06.071Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getStateContractOwner()": {
        "details": "Example function to demonstrate cross-contract READ call"
      },
      "getStateCounter()": {
        "details": "Another example function to demonstrate cross-contract WRITE call"
      },
      "incrementStateCounter(uint256)": {
        "details": "Example function to demonstrate cross-contract WRITE call"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}